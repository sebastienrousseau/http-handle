var searchIndex = new Map(JSON.parse('[["http_handle",{"t":"EECCCCPPPPPGNNNNNNNNNNNNNNNNFNNNNNNNNNNNNONONNNNNNOFNONNNNNNNNNNNONNNNOONNNNFNNNNNNNNNNNNNNNNNNN","n":["Server","ServerError","error","request","response","server","Custom","Forbidden","InvalidRequest","Io","NotFound","ServerError","borrow","borrow_mut","fmt","","forbidden","from","","","into","invalid_request","not_found","source","to_string","try_from","try_into","type_id","Request","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","","from","from_stream","into","method","","path","","to_owned","to_string","try_from","try_into","type_id","version","","Response","add_header","body","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deserialize","eq","fmt","from","hash","headers","into","new","send","serialize","status_code","status_text","to_owned","try_from","try_into","type_id","Server","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deserialize","eq","fmt","from","hash","into","new","serialize","start","to_owned","try_from","try_into","type_id"],"q":[[0,"http_handle"],[6,"http_handle::error"],[28,"http_handle::request"],[51,"http_handle::response"],[76,"http_handle::server"],[96,"core::fmt"],[97,"alloc::string"],[98,"core::convert"],[99,"std::io::error"],[100,"core::error"],[101,"core::option"],[102,"core::result"],[103,"core::any"],[104,"std::net::tcp"],[105,"serde::de"],[106,"core::hash"],[107,"alloc::vec"],[108,"std::io"],[109,"serde::ser"]],"i":"``````f0000`0000000000000000`Al000000000000000000000`Bf00000000000000000000000`Cd000000000000000000","f":"````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{dh}}}j}0{cf{{n{l}}}}{{{b{A`}}}f}{cc{}}{Abf}{{}c{}}44{{{b{f}}}{{Af{{b{Ad}}}}}}{bl}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}`<;{{{b{Al}}}Al}{{b{b{dc}}}An{}}{{bB`}An}{{{b{Al}}{b{Al}}}Bb}{{{b{Al}}{b{dh}}}j}0<{{{b{Bd}}}{{Ah{Alf}}}};{{{b{Al}}}{{b{A`}}}}`0`{bc{}};:981``{{{b{dBf}}{b{A`}}{b{A`}}}An}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Bf}}}Bf}:9{{}Bf}{c{{Ah{Bf}}}Bh}{{{b{Bf}}{b{Bf}}}Bb}{{{b{Bf}}{b{dh}}}j}{cc{}}{{{b{Bf}}{b{dc}}}AnBj}`{{}c{}}{{Bl{b{A`}}{Bn{B`}}}Bf}{{{b{Bf}}{b{dc}}}{{Ah{Anf}}}C`}{{{b{Bf}}c}AhCb}``>{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}`?>{{{b{Cd}}}Cd}{{b{b{dc}}}An{}}{{bB`}An}{{}Cd}{c{{Ah{Cd}}}Bh}{{{b{Cd}}{b{Cd}}}Bb}{{{b{Cd}}{b{dh}}}j}?{{{b{Cd}}{b{dc}}}AnBj}>{{{b{A`}}{b{A`}}}Cd}{{{b{Cd}}c}AhCb}{{{b{Cd}}}{{Cf{An}}}}{bc{}}>=<","D":"Eb","p":[[1,"reference",null,null,1],[0,"mut"],[6,"ServerError",6],[5,"Formatter",96],[8,"Result",96],[5,"String",97],[10,"Into",98],[1,"str"],[5,"Error",99],[10,"Error",100],[6,"Option",101,null,1],[6,"Result",102,null,1],[5,"TypeId",103],[5,"Request",28],[1,"unit"],[1,"u8"],[1,"bool"],[5,"TcpStream",104],[5,"Response",51],[10,"Deserializer",105],[10,"Hasher",106],[1,"u16"],[5,"Vec",107],[10,"Write",108],[10,"Serializer",109],[5,"Server",76],[8,"Result",99]],"r":[[0,76],[1,6]],"b":[[14,"impl-Display-for-ServerError"],[15,"impl-Debug-for-ServerError"],[17,"impl-From%3C%26str%3E-for-ServerError"],[19,"impl-From%3CError%3E-for-ServerError"],[35,"impl-Debug-for-Request"],[36,"impl-Display-for-Request"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADcADgAAAAIADQADABQAAAAYAAQAHgAHAC0ABAA3AAgAQQAAAEYAAABJAAMATgAIAFgAAABbAAAAXQADAA==","P":[[12,"T"],[14,""],[16,"T"],[17,""],[18,"T"],[19,""],[20,"U"],[21,"T"],[23,""],[25,"U,T"],[26,"U"],[27,""],[29,"T"],[31,""],[32,"T"],[33,""],[37,"T"],[38,""],[39,"U"],[40,""],[44,"T"],[45,""],[46,"U,T"],[47,"U"],[48,""],[54,"T"],[56,""],[57,"T"],[58,""],[60,"__D"],[61,""],[63,"T"],[64,"__H"],[66,"U"],[67,""],[68,"W"],[69,"__S"],[72,"T"],[73,"U,T"],[74,"U"],[75,""],[77,"T"],[79,""],[80,"T"],[81,""],[83,"__D"],[84,""],[86,"T"],[87,"__H"],[88,"U"],[89,""],[90,"__S"],[91,""],[92,"T"],[93,"U,T"],[94,"U"],[95,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3712]}